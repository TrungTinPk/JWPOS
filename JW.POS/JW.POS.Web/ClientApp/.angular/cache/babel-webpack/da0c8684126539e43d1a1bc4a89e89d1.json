{"ast":null,"code":"import { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authenticate.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthorizeGuard = /*#__PURE__*/(() => {\n  class AuthorizeGuard {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      return this.authService.isAuthenticated().pipe(tap(authenticated => this.handleAuth(authenticated, state)));\n    }\n\n    handleAuth(isAuthenticated, state) {\n      if (!isAuthenticated) {\n        this.router.navigate(['login'], {\n          queryParams: {\n            returnUrl: state\n          }\n        });\n      }\n    }\n\n  }\n\n  AuthorizeGuard.ɵfac = function AuthorizeGuard_Factory(t) {\n    return new (t || AuthorizeGuard)(i0.ɵɵinject(i1.AuthenticateService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthorizeGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthorizeGuard,\n    factory: AuthorizeGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthorizeGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}